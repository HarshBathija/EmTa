This document describes the file structure of the Employee-Meal-Tracking User Interface as well as API calls made through the UI to the backend. The project is a web-application with three major parts: front-end, back-end and database.
Front - end is implemented using AngularJS.
Back-end is developed on Java and Spring Framework
Database is maintained by PostgreSQL

We have integrated our backend with frontend using API calls from AngularJS controllers.

We have .html files for the feel and look of front end. All Controller Files are placed in the Controllers folder. Appropriate controllers are written depending on the functionalities they perform. According to the functionality of the project, we have following files
- Employee_Details.html: This page prompts the admin of the system to enter the Student id in order to fetch the student employment details. It contains a "Fetch Details" button that, when clicked, initiates a request to the Employee details API and shows the results in a tabular format on the same page.
- employeeController.js: This is the Controller that is responsible for handling button clicks and initiating API calls. We used the $http - get function to perform an API request, acquire details, and return them in a table on Employee Details.html
- Meal.html: This html page allows the system administrator to register a student's meal ordering details by entering their Student id and the name of the store where the meal is being taken.
- SCartController.html: With the aid of an API request, this controller is used to call the $http-post function and save the employee meal details to the database. This Controller is triggered when the "Add" button on the Meal.html page is clicked, $http's POST is executed, and the provided data is saved in the backend.
- Defaulter.html: This page displays the list of people with their names and other details along with a reason stating why there is a violation in their employee meal records.
- defaulterController.js: This controller makes a call to the DefaultersList API using the AngularJS, $http.get and fetches defaulterdetails from the backend.

We have used internal CSS for the basic aesthetic of our webpages.
